name: Deploy API to Proxmox VM

on:
  push:
    branches:
      - vm-deploy # main ブランチへのプッシュでデプロイ開始

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: carshare-backend # 環境名（任意、Secrets管理に便利）

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- 1. Docker Hub へのログインとビルド/プッシュ ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # Docker Hub のユーザー名（YOUR_DOCKER_USERNAME に置き換える）
          username: ${{ secrets.DOCKER_USERNAME }}
          # Docker Hub のアクセストークン（GitHub Secretsに登録済み）
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfileがあるディレクトリ
          push: true
          # タグ名: YOUR_DOCKER_USERNAME/YOUR_REPO_NAME:latest に置き換える
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPO_NAME }}:latest 

      # ------------------------------------------------------------------
      # --- 1. SSH 環境のセットアップと Cloudflared のインストール ---
      # ------------------------------------------------------------------
      - name: Setup SSH Environment and Install Cloudflared
        env:
          SSH_KEY_FILE: ~/.ssh/deploy_key
        run: |
          # 鍵をファイルに保存
          echo "${{ secrets.DEPLOY_KEY }}" > ${SSH_KEY_FILE}
          chmod 600 ${SSH_KEY_FILE}
          # ssh-add でエージェントに鍵を登録
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add ${SSH_KEY_FILE}
          
          # cloudflared のインストール
          sudo apt update
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 -o /usr/local/bin/cloudflared
          sudo chmod +x /usr/local/bin/cloudflared

      # ------------------------------------------------------------------
      # --- 2. SSH 設定ファイルの作成 (ProxyCommand) ---
      # ------------------------------------------------------------------
      - name: Create SSH Config with ProxyCommand
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          CF_ID: ${{ secrets.CF_CLIENT_ID }}
          CF_SECRET: ${{ secrets.CF_CLIENT_SECRET }}
        run: |
          # SSH設定ファイルを作成し、Service Token 認証を強制
          echo "Host ${DEPLOY_HOST}" > ~/.ssh/config
          echo "    User ${{ secrets.DEPLOY_USER }}" >> ~/.ssh/config
          echo "    IdentityFile ~/.ssh/deploy_key" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config # CI/CDではホスト鍵チェックを無効化
          # ProxyCommand に Service Token を埋め込み、Cloudflare Access 経由を強制
          echo "    ProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h --client-id ${CF_ID} --client-secret ${CF_SECRET}" >> ~/.ssh/config
          
          chmod 600 ~/.ssh/config

      # ------------------------------------------------------------------
      # --- 3. 標準の SSH コマンドでデプロイを実行 ---
      # ------------------------------------------------------------------
      - name: Execute Deployment Script
        env:
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        # 標準の SSH クライアントを使って、VM上でデプロイコマンドを実行
        run: |
          # コマンド全体を一つにまとめて実行
          ssh -A ${DEPLOY_HOST} "
            cd /home/${{ secrets.DEPLOY_USER }}/main/itemshare-backend;
            /usr/bin/docker compose pull api;
            /usr/bin/docker compose up -d --no-deps api;
            /usr/bin/docker image prune -f;
          "
