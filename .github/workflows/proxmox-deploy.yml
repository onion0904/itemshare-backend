name: Deploy API to Proxmox VM

on:
  push:
    branches:
      - vm-deploy # main ブランチへのプッシュでデプロイ開始

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: carshare-backend # 環境名（任意、Secrets管理に便利）

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # --- 1. Docker Hub へのログインとビルド/プッシュ ---
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          # Docker Hub のユーザー名（YOUR_DOCKER_USERNAME に置き換える）
          username: ${{ secrets.DOCKER_USERNAME }}
          # Docker Hub のアクセストークン（GitHub Secretsに登録済み）
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Dockerfileがあるディレクトリ
          push: true
          # タグ名: YOUR_DOCKER_USERNAME/YOUR_REPO_NAME:latest に置き換える
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.REPO_NAME }}:latest 

      # --- SSH 経由でのデプロイ実行 (Cloudflare Access 認証を組み込む) ---
      - name: Deploy to Proxmox VM via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_HOST }} # ssh.yourdomain.com
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          
          # 【重要】Cloudflare Access 経由の認証を行うための環境変数を設定
          # トンネル経由のSSH接続は、このプロキシ設定を使って強制されます。
          # 'cloudflared access ssh --hostname %h' が認証時に実行されます。
          # cf_access_client_id と cf_access_client_secret の環境変数が必要です
          envs: CF_CLIENT_ID,CF_CLIENT_SECRET
          
          # 認証情報 (Service Token) を環境変数に設定
          env: |
            CF_CLIENT_ID=${{ secrets.CF_CLIENT_ID }}
            CF_CLIENT_SECRET=${{ secrets.CF_CLIENT_SECRET }}
            
          # 【最重要】SSHクライアント設定を上書きしてCloudflare Accessを経由させる
          # SSH実行前にこのコマンドを実行し、設定ファイルを生成します。
          pre_script: |
            # SSH設定ファイルを作成し、Cloudflare Access経由を強制
            echo "Host ${{ secrets.DEPLOY_HOST }}" > ~/.ssh/config
            echo "    HostName ${{ secrets.DEPLOY_HOST }}" >> ~/.ssh/config
            echo "    ProxyCommand /usr/local/bin/cloudflared access ssh --hostname %h --client-id ${CF_CLIENT_ID} --client-secret ${CF_CLIENT_SECRET}" >> ~/.ssh/config
            chmod 600 ~/.ssh/config
            
          # VM上で実行するデプロイコマンド
          script: |
            # 1. アプリケーションディレクトリに移動
            cd /home/${{ secrets.DEPLOY_USER }}/main/itemshare-backend
            
            # 2. 最新のDockerイメージをプル（apiサービスのみ）
            /usr/bin/docker compose pull api
            
            # 3. サービスを再起動
            /usr/bin/docker compose up -d --no-deps api
            
            # 4. 不要になった Docker イメージを削除
            /usr/bin/docker image prune -f